/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../app/Pages/feeds/script.js":
/*!***************************************!*\
  !*** ../../app/Pages/feeds/script.js ***!
  \***************************************/
/***/ (() => {

eval("document.addEventListener('alpine:init', function () {\n  Alpine.data('feeds', function () {\n    return {\n      ui: {},\n      data: {},\n      model: {},\n      init: function init() {}\n    };\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYXBwL1BhZ2VzL2ZlZWRzL3NjcmlwdC5qcyIsIm5hbWVzIjpbImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIkFscGluZSIsImRhdGEiLCJ1aSIsIm1vZGVsIiwiaW5pdCJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL2FwcC9QYWdlcy9mZWVkcy9zY3JpcHQuanM/MTM1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdhbHBpbmU6aW5pdCcsICgpID0+IHtcbiAgICBBbHBpbmUuZGF0YSgnZmVlZHMnLCAoKSA9PiAoe1xuICAgICAgICB1aToge30sXG4gICAgICAgIGRhdGE6IHt9LFxuICAgICAgICBtb2RlbDoge30sXG5cbiAgICAgICAgaW5pdCgpIHtcblxuICAgICAgICB9XG4gICAgfSkpXG59KSAiXSwibWFwcGluZ3MiOiJBQUFBQSxRQUFRLENBQUNDLGdCQUFnQixDQUFDLGFBQWEsRUFBRSxZQUFNO0VBQzNDQyxNQUFNLENBQUNDLElBQUksQ0FBQyxPQUFPLEVBQUU7SUFBQSxPQUFPO01BQ3hCQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO01BQ05ELElBQUksRUFBRSxDQUFDLENBQUM7TUFDUkUsS0FBSyxFQUFFLENBQUMsQ0FBQztNQUVUQyxJQUFJLFdBQUpBLElBQUlBLENBQUEsRUFBRyxDQUVQO0lBQ0osQ0FBQztFQUFBLENBQUMsQ0FBQztBQUNQLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==\n//# sourceURL=webpack-internal:///../../app/Pages/feeds/script.js\n");

/***/ }),

/***/ "../../app/Pages/sample_mobile/script.js":
/*!***********************************************!*\
  !*** ../../app/Pages/sample_mobile/script.js ***!
  \***********************************************/
/***/ (() => {

eval("document.addEventListener('alpine:init', function () {\n  Alpine.data('sample_mobile', function () {\n    return {};\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vLi4vYXBwL1BhZ2VzL3NhbXBsZV9tb2JpbGUvc2NyaXB0LmpzIiwibmFtZXMiOlsiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiQWxwaW5lIiwiZGF0YSJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uLy4uL2FwcC9QYWdlcy9zYW1wbGVfbW9iaWxlL3NjcmlwdC5qcz8xM2VhIl0sInNvdXJjZXNDb250ZW50IjpbImRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FscGluZTppbml0JywgKCkgPT4ge1xuICAgIEFscGluZS5kYXRhKCdzYW1wbGVfbW9iaWxlJywgKCkgPT4gKHtcblxuICAgIH0pKVxufSkgIl0sIm1hcHBpbmdzIjoiQUFBQUEsUUFBUSxDQUFDQyxnQkFBZ0IsQ0FBQyxhQUFhLEVBQUUsWUFBTTtFQUMzQ0MsTUFBTSxDQUFDQyxJQUFJLENBQUMsZUFBZSxFQUFFO0lBQUEsT0FBTyxDQUVwQyxDQUFDO0VBQUEsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDIiwiaWdub3JlTGlzdCI6W119\n//# sourceURL=webpack-internal:///../../app/Pages/sample_mobile/script.js\n");

/***/ }),

/***/ "../../app/Pages/script.js":
/*!*********************************!*\
  !*** ../../app/Pages/script.js ***!
  \*********************************/
/***/ (() => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\ndocument.addEventListener('alpine:init', function () {\n  NProgress.configure({\n    showSpinner: false\n  });\n  Alpine.data(\"router\", function () {\n    return {\n      init: function init() {\n        var _this = this;\n        return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n          return _regeneratorRuntime().wrap(function _callee$(_context) {\n            while (1) switch (_context.prev = _context.next) {\n              case 0:\n                document.title = _this.title;\n                Alpine.store('core').sessionToken = localStorage.getItem('heroic_token');\n                _context.next = 4;\n                return Alpine.store('core').getSiteSettings();\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }, _callee);\n        }))();\n      },\n      // Check login session, dipanggil oleh x-handler template yang meemerlukan session\n      isLoggedIn: function isLoggedIn(context) {\n        if (localStorage.getItem('intro') != 1) return context.redirect('/intro');\n        if (Alpine.store('core').sessionToken == null) return context.redirect('/masuk');\n      },\n      notfound: function notfound(context) {\n        document.querySelector('#app').innerHTML = \"<h1>Not Found</h1>\";\n      }\n    };\n  });\n\n  // Setup Pinecone Router\n  window.PineconeRouter.settings.basePath = '/';\n  window.PineconeRouter.settings.includeQuery = false;\n  document.addEventListener('pinecone-start', function () {\n    NProgress.start();\n    Alpine.store('core').pageLoaded = false;\n  });\n  document.addEventListener('pinecone-end', function () {\n    NProgress.done();\n    Alpine.store('core').pageLoaded = true;\n  });\n  document.addEventListener('fetch-error', function (err) {\n    return console.error(err);\n  });\n\n  // Global store\n  Alpine.store('core', {\n    currentPage: 'home',\n    pageLoaded: false,\n    showBottomMenu: true,\n    sessionToken: null,\n    settings: {},\n    user: {},\n    getSiteSettings: function getSiteSettings() {\n      return _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(Object.keys(Alpine.store('core').settings).length < 1)) {\n                _context2.next = 9;\n                break;\n              }\n              _context2.prev = 1;\n              _context2.next = 4;\n              return axios.get('/_components/common/settings', {\n                headers: {\n                  'Authorization': \"Bearer \" + localStorage.getItem('heroic_token')\n                }\n              }).then(function (response) {\n                Alpine.store('core').settings = response.data.settings;\n                Alpine.store('core').user = response.data.user;\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n            case 4:\n              _context2.next = 9;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](1);\n              // Tangani error jika terjadi masalah pada saat fetching data\n              console.error('Error fetching site settings:', _context2.t0);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, null, [[1, 6]]);\n      }))();\n    }\n  });\n});\n\n// Deklarasi variable untuk menyimpan cache data page\nwindow.pageCache = {};\n\n//****************************************************************** */\n// Animated header style on scroll\n//****************************************************************** */\nwindow.animatedScroll = function () {\n  var appHeader = document.querySelector(\".appHeader.scrolled\");\n  var scrolled = window.scrollY;\n  if (scrolled > 20) {\n    appHeader.classList.add(\"is-active\");\n  } else {\n    appHeader.classList.remove(\"is-active\");\n  }\n};\n\n// Variabel untuk melacak offcanvas yang sedang terbuka\nwindow.openOffcanvas = null;\nwindow.openModal = null;\nwindow.historyStateAdded = false;\ndocument.addEventListener('pinecone-end', function () {\n  var appHeader = document.querySelector(\".appHeader.scrolled\");\n  if (document.body.contains(appHeader)) {\n    animatedScroll();\n    document.addEventListener(\"scroll\", function () {\n      animatedScroll();\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../app/Pages/script.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["../../app/Pages/feeds/script.js"]();
/******/ 	__webpack_modules__["../../app/Pages/sample_mobile/script.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["../../app/Pages/script.js"]();
/******/ 	
/******/ })()
;